<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="frmRoot.IconOptions.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAMDAAAAEACACoDgAANgAAACAgAAABAAgAqAgAAN4OAAAQEAAAAQAIAGgFAACGFwAAKAAAADAA
        AABgAAAAAQAIAAAAAAAACQAAAAAAAAAAAAAAAQAAAAAAAEtVWQBMVVkAtbm6ADhDSAD19fYAoqepAGRs
        cABPWVwAzdDRADxHSwC+wsMAgIeKAEJMUQAtOT0A6uvrAKywsgDX2doAmZ6hAEZQVACvtLUAMz5DANvd
        3QBeZ2sAX2drAIqQkwA3QkYA8/T0ALW5uwBia24A4eLjAHuChQBTXWAA/f39AICHiwDq6+wAWmJmAMPG
        xwAxPUEAMj1BAO7v7wByeX0ASlRYAHZ9gAD09PUAoKaoAFBZXgD3+PgAe4KGALq9vwCnq64A6OrqANbY
        2QCDiowARU9TADI9QgCboaMA7+/wANrc3ADGyssANkFFAPLz8wBham0Adn2BAE9YXAC4vL0AeoGEADxG
        SwBTXF8AkpibAL3BwwD8/PwAWGFlAMHFxgBFT1QAMDxAADE8QADt7u4AXWVoANrc3QCHjpAAx8rMAHR8
        fwA2QUYAdXx/APLz9ACfpacA8/P0AKClpwDLzs8AOkVJAPb39wB6gYUAZW5xAFNcYAD8/P0ARE5SAMLF
        xwAwPEEAMTxBAMXJygDGycoANUBEAPHy8gCzt7kA3uDhAE5XWwB5gIMAlZudAMHExQAvOz8A6+3tADA7
        PwCtsrQArrK0AEhSVgDGycsAc3t+AN3f3wCfpKYAYWltAMrNzgCMkpUAOURIAPX29gD29vYApKmsAOPk
        5QBRW18AUltfAHyEhwB9hIcA5ujoAGpydgBVX2IA09bXAJabngBDTVEA////AKyxsgDBxMYAMDtAAOzt
        7gBbZGgAho2QAEhSVwCHjZAAND9DALG2uADw8fEAsra4AGBoawDd3+AAipGTAE1WWgA6REkA9vb3AGVt
        cQCQlpkAPUhMAPn6+gD6+voAaHF0AKesrQBpcXQA5+jpAIGIiwBDTVIAgoiLAOrs7ADr7OwArbGzAG92
        egDX2tsAR1FVAHN6fQA0P0QA8PHyAPHx8gBfaGwAi5GUADhDRwD09fUA9fX1AOHj5ABQWl4AfIOGAPr6
        +wCnrK4AgIeJAEJMUAD+/v4AwMPFAOvs7QCYnqAAWmNnAMPHyAAyPkIAhoyPADM+QgDv8PAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsY2jIwUkktKxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxktZBmuV
        GzecGSbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGNj1FGomJiYkaiq0lxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGWw6JibVodSuJiQqIJsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxjYvJ4l8k1xJX6F4ib6HNsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGNi8niWZPUm8mJm2ZM4lONSbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsY2LyeJlKUUJsbG
        xsZvRIk8jkrGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxjYvJ4mwIRTExsbGxsZtxYm2F4zGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGNi8nibALFMbGxsbGxsYUcYkyLUvGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsY2LyeJsAsUxsbGxsbGxoyyqYlsesbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxjYv
        J4mwCzZiJsbGxsbGSylYiVpRSsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGNi8nibALYY55QibGxsZL
        couJiQ8DxMbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsY2HieJsAthwqxGV7TGxktyi4mJv0klxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxjYvJ4mwC2HCEIlefbTGS3KLiYmLckvGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGNi8nibALYsIQiUYxCSZLcouJiYuQS8bGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsY2LyeJsAti
        whCJRjEJJktyi4mJi5BLxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxjYvJ4mwIWHCEIlGMQkmSwBgiYmL
        ckrGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGNi8nibALYcIQiUYxCSZLAGSJiYtyxpomxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsY2LyeJsAthwhCJRjEJJksBZImJi3ImkWetJsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xjYvJ4mwC2LCEIlGMQkmSwFjiYmLcmKlPIkTtMbGxsbGxsbGxsbGxsbGxsbGxsbGNi8nibAhYoUQiUYx
        CSZLAGOJiYtyYguwiSeBksbGxsbGxsbGxsbGxsbGxsbGxsbGHieJsCHGtECJRjEJJksAZImJi3JiC7CJ
        Jx42xsbGxsbGxsbGxsbGxsbGxsbGxkuEjYmwCxRLH8CJMAkmSwBkiYmLckq8sImUuTbGxsbGxsbGxsbG
        xsbGxsbGxsbGJgwIiRqnFMZvHJuJjw1vAWSJiYtyjB44iZQLxsbGxsbGxsbGxsbGxsbGxsbGxsbGjAtG
        iSyvNsZLQyKJw4AWUImJi3KMHieJsAvGxsbGxsbGxsbGxsbGxsbGxsbGxsbGeiSJfj9LxsbGGWeJIDLH
        iYmLcoweJ4mwC8bGxsbGxsbGxsbGxsbGxsbGxsbGxsZLaYOJcBTGxsbGYgc6IImJLgJyb2oniVQ0xsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsZKTVaJs2/GxsbGxmKIC6JVq1mMKm6JVMWSxMbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsZvlnuJpW3GxsbGxsYmbyZLb2I+bolUxZImxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsZLI7GJ
        RIzGxsbGxsbGxsbGJj5uiRrFkibGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsYmEpeJSHomxsbGxsbGxsZi
        KKmJthiSNsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGkqqJBFNvxsbGxsbGJiauMom2s2UmxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGS3eNibejJksmJmJvnrNMibWzZSbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxhSdn4mowUeIvX+Cc6CJGphlJsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxiZ6
        EXuJvicVOSJGiYkdQa8mxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsYmO2qGuomJiYkgpLtd
        YsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxkumdHYbGwWCuJJixsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsYmb0uSkktvS8bGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbGxsbG
        xsYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAAB
        AAAAAAAAS1VZALW5ugB3foEAoqepAM3Q0QA9R0sAu77AAGhwcwCBh4oAQkxRAOrr6wCssLIAWWJlAEZQ
        VADEx8kA7/DxAF5nawA3QkYAtbm7APT09ADh4uMAzdDSAGhwdABAS08A/P39AEFLTwD9/f0AbHR3AC45
        PgCXnZ8ARE9SAIWLjgAyPUEA7u/vALC0tgBdZmkA293eAEpUWACzuLkAOEJHAKCmqAChpqgAzM/QAPf4
        +AC5vb8AvcHCAEFLUADp6uoAWGFkAEVPUwAyPUIAXWZqAF5magA2QUUA8vPzALS4ugB6gYQAvcHDAPz8
        /AAtOD0AQ05RAMHFxgAwPEAAMTxAAO3u7gCvs7UASVNXAPPz9ADe4OAAYmpuADpFSQDk5eYAU1xgALzA
        wQB+hYgAQEpPAPz8/QCqrrAAa3N3AENOUgBETlIAm6CiADVARACyt7kA8fLyALO3uQBgaWwA3uDhALa7
        vAC3u7wAeYCDAD9JTQBqcnUAwcTFAEROUwAvOz8AMDs/AK6ytABbZGcASFJWAMbJywA2QEUAys3OADlE
        SAD19vYA9vb2AHyEhwB9hIcA+/v8AEJNUQBDTVEAwcTGADA7QADFyMkAh42QADQ/QwDw8fEAsra4AF9o
        awBMVloAtrq7AKOoqgA9SEwA+fr6AD5ITAD6+voAvL/BAOfo6QCBiIsAgoiLAENNUgAuOj4ALzo+AFpj
        ZgCFjI4AR1FVAEhRVQByen0AyczNADhDRwA5Q0cA9PX1ALa6vADi4+QAUFpeAFFaXgB8g4YA5efnAEFM
        UABCTFAAwMPFAJieoADEx8gAR1FWAIaMjwAzPkIAsLW3ANze3wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubcJuMNT4gm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubIIsbC4otgXogm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubmz8ZTSsrR3Q6nFsgm5ubm5ubm5ubm5ubm5ubm5ubm5s/GVUaDgcNMH4Ycj+bm5ubm5ubm5ub
        m5ubm5ubm5ubPxlVGllQXyCESECWNZubm5ubm5ubm5ubm5ubm5ubmz8ZVRqOCT+bmyCIk2Qnm5ubm5ub
        m5ubm5ubm5ubm5s/GVUaeJQ/m5ubYGo6KCCbm5ubm5ubm5ubm5ubm5ubPxlVGhJjWyCbmz52jy+FP5ub
        m5ubm5ubm5ubm5ubmz8ZVRoSmZdxJSA/MySNCDKbm5ubm5ubm5ubm5ubm5s/GVUaEpkdfRUAhDMkjXJz
        m5ubm5ubm5ubm5ubm5ubPxlVGhKZHX0EkYM0JI1ycyCbm5ubm5ubm5ubm5ubmz8ZVRoSmR19BJAcVp2N
        miAgm5ubm5ubm5ubm5ubm5s/GVUaEpkdfQSQHFZXjR+Hhh4gm5ubm5ubm5ubm5ubPxlVGniZHX0EkBxW
        V40fgll9gD+bm5ubm5ubm5ubmyAXUxqOS0p7BJAcVleNH4J4GlVuIJubm5ubm5ubm5ubZXkajpVSPSEM
        O1ZXjR+VARoSGT+bm5ubm5ubm5ubmz5FNmZePxFdDxZcRI0flXUajm0/m5ubm5ubm5ubm5ubIClsiV+b
        P5JpNmg2Hy51GliVP5ubm5ubm5ubm5ubm5sRmH9CIJubEVoGJk4XQRosTz+bm5ubm5ubm5ubm5ubm4uK
        FFAgm5ubP1IgBUEaLFA/m5ubm5ubm5ubm5ubm5ubcxJDYmCbm5ubP3phGklQP5ubm5ubm5ubm5ubm5ub
        m5tgazoiRmAgP188YUwtDT+bm5ubm5ubm5ubm5ubm5ubmyBbOTp1IzF3AioaSQ0/m5ubm5ubm5ubm5ub
        m5ubm5ubmz8ASToTjwo6VANuP5ubm5ubm5ubm5ubm5ubm5ubm5ubmz98ODdmb1EQUiCbm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubmyBgc2c1Pz+bm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ubm5ub
        m5ubm5ubm5ubm5ubm5sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAA
        AADCxccAsra4AIeNkAC9wcIAZm9yAHd+gQCCiYsAZ29yADxGSgDAw8UAsLS2ADlESABUXmEAcnp9AHN6
        fQA4QkYAu7/BAGBpbABxeHsANkBEAF5nagAzPkIAnKGkAMLGxwB8g4YAbHR3AEFLTwAwPEAAMTxAALW5
        uwDAxMUAlZudAHqBhABqcnUALzo+AMPGyACzt7kAvsLDAKOoqgBMVloAPEdLAGhwcwDBxMYAvMDBAGVu
        cQBLVFgAgYiKAL/CxACvs7UAc3t+AI6VlwB0e34AVF1gAJGXmgCtsbMARlBUAFFbXgB9hIYANkFFADQ/
        QwBPWVwAw8fIAH2EhwDEx8gAMj1BALa6vACmq60Ai5GUAHuChQDCxcYAa3N2AFBZXQBASk4AMDs/AMTH
        yQC/w8QAiY+SAGhxdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAFRUVFRUVFRUVFRVAFRUVFRUVFRUVFRUVFRwPSDtAFRUVFRUVFRUVFRwRAUsfCEAVFRUVFRUV
        FRwESgU4QTFJFRUVFRUVFRwEFwRJHEJESRUVFRUVFRwEADIUHD4rN0AVFRUVFRwERTUJGSAvDBwVFRUV
        FRwEADUeDhgJMyhAFRUVFRwsFwIDDRgvQxBHHBUVFUAtKgc5MAYlTBcpQBUVFRVJRCZJPCQKAhdNHBUV
        FRUVSS4WIhs6IT0hHBUVFRUVFRw0IxInRD9GHBUVFRUVFRUVQAcdAzYUHBUVFRUVFRUVFRUcCxoTHBUV
        FRUVFRUVFRUVFRVAFRUVFRUVFRUVFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>